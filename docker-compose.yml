version: "3.9"
services:
  proxy:
    container_name: proxy
    image: nginx:latest
    ports:
      - "32529:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./storage/logs/nginx:/var/log/nginx
    depends_on:
      - "backend"
      - "websocket"
    networks:
      - go-network

  websocket:
    container_name: websocket
    build:
      context: .
      dockerfile: docker/ws/Dockerfile
    restart: always
    volumes:
      - ./:/app
    networks:
      - go-network

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "32530:8082"
    depends_on:
      - "mysql"
      - "mongodb"
      - "memcached"
    restart: always
    environment:
      - GO_PORT=8082
      - ROOT_PATH=/app
    volumes:
      - ./:/app
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - go-network

  mongodb:
    container_name: mongodb
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - "32531:27017"
    restart: unless-stopped
    volumes:
      - ./docker/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./storage/db/mdb:/data/db
    networks:
      - go-network

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: api
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '32532:3306'
    volumes:
      - ./storage/db/mysql:/var/lib/mysql
    networks:
      - go-network

  memcached:
    container_name: memcached
    image: memcached
    ports:
      - "32533:11211"
    networks:
      - go-network
        
networks:
  go-network:
    external: true